<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xj.iws.http.mvc.dao.DeviceTermDao">

    <sql id="deviceType">name,pic,describes</sql>
    <sql id="deviceTerm">count,protocol,type,name,describes</sql>
    <sql id="pointField">deviceid,number,roleid,name,describes,unit,min,max,multiple</sql>

    <resultMap id="PointFieldEntity" type="com.xj.iws.http.mvc.entity.PointFieldEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="deviceid" property="deviceId" jdbcType="INTEGER"/>
        <result column="number" property="number" jdbcType="INTEGER"/>
        <result column="roleid" property="roleId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="describes" property="describes" jdbcType="VARCHAR"/>
        <result column="unit" property="unit" jdbcType="VARCHAR"/>
        <result column="min" property="min" jdbcType="DOUBLE"/>
        <result column="max" property="max" jdbcType="DOUBLE"/>
        <result column="multiple" property="multiple" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="DeviceTermEntity" type="com.xj.iws.http.mvc.entity.DeviceTermEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="protocol" property="protocol" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="describes" property="describes" jdbcType="VARCHAR"/>
        <result column="typename" property="typeName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="DeviceTypeEntity" type="com.xj.iws.http.mvc.entity.DeviceTypeEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="pic" property="pic" jdbcType="VARCHAR"/>
        <result column="describes" property="describes" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="addDevice" parameterType="DeviceTermEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO deviceterm (<include refid="deviceTerm"/>) VALUES
        ('${count}','${protocol}',${type},'${name}','${describes}')
    </insert>

    <insert id="addField">
        INSERT INTO pointfield (<include refid="pointField"/>) VALUES
        <foreach collection="fields" item="item" separator=",">
            (${deviceId},'${item.number}','${item.roleId}','${item.name}','${item.describes}','${item.unit}','${item.min}','${item.max}','${item.multiple}')
        </foreach>
    </insert>

    <delete id="deleteDevice" parameterType="int">
        DELETE FROM deviceterm WHERE id = ${_parameter}
    </delete>

    <delete id="deleteField" parameterType="int">
        DELETE FROM pointfield WHERE deviceid = ${_parameter}
    </delete>

    <update id="update" parameterType="DeviceTermEntity">
        UPDATE deviceterm
        <set>
            <if test="protocol != null">protocol = '${name}',</if>
            <if test="name != null">name = '${name}',</if>
            <if test="describes != null">describes = '${describes}',</if>
        </set>
        WHERE id = ${id}
    </update>

    <select id="fieldList" parameterType="int" resultMap="PointFieldEntity">
        SELECT id,<include refid="pointField"/>
        FROM pointfield
        <where>
            <if test="_parameter != 0">deviceid = ${_parameter}</if>
        </where>
        ORDER BY deviceid,id
    </select>

    <select id="detail" parameterType="int" resultMap="DeviceTermEntity">
        SELECT dt.id,dt.count,dt.protocol,dt.type,dt.name,dt.describes,t.name AS typename
        FROM deviceterm dt
        LEFT JOIN devicetype t ON dt.type = t.id
        WHERE dt.id = ${_parameter}
    </select>

    <select id="deviceTermByIds" resultMap="DeviceTermEntity">
        SELECT dt.id,dt.count,dt.protocol,dt.type,dt.name,dt.describes,t.name AS typename
        FROM deviceterm dt
        LEFT JOIN devicetype t ON dt.type = t.id
        WHERE dt.id IN (<foreach collection="array" item="item" separator=",">${item}</foreach>)
    </select>

    <select id="deviceTermList" resultMap="DeviceTermEntity">
        SELECT dt.id,dt.count,dt.protocol,dt.type,dt.name,dt.describes,t.name AS typename
        FROM deviceterm dt
        LEFT JOIN devicetype t ON dt.type = t.id
        <where>
            <if test="type != null"> dt.type = '${type}'</if>
        </where>
        ORDER BY dt.id
        <if test="page.numberPerPage != 0">
            LIMIT ${page.currentNumber},${page.numberPerPage}
        </if>
    </select>

    <select id="getCount" resultType="int">
        SELECT count(0)
        FROM deviceterm dt
        LEFT JOIN devicetype t ON dt.type = t.id
        <where>
            <if test="_parameter != null"> dt.type = ${_parameter}</if>
        </where>
        ORDER BY dt.id
    </select>

    <select id="fieldDetail" parameterType="int" resultMap="PointFieldEntity">
        SELECT id,
        <include refid="pointField"/>
        FROM pointfield WHERE id = ${_parameter}
    </select>

    <select id="typeList" resultMap="DeviceTypeEntity">
        SELECT id,
        <include refid="deviceType"/>
        FROM devicetype ORDER BY id
    </select>

    <select id="query" resultMap="DeviceTermEntity">
        SELECT id,
        <include refid="deviceTerm"/>
        FROM deviceterm
        <where>
            <if test="protocol != null">AND protocol LIKE '%${protocol}%'</if>
            <if test="type != 0">AND type = '${type}'</if>
            <if test="name != null">AND name LIKE '%${name}%'</if>
        </where>
        ORDER BY id
    </select>

</mapper>